#!/bin/sh
#-
# Copyright 2017 David Kalliecharan
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

# Configuration
CONF_USER=~/.wico.conf
CONF_SYSTEM=/etc/wico.conf

if [ -r ${CONF_USER} ]
then
    CONF=${CONF_USER}
elif [ -r ${CONF_SYSTEM} ]
then
    CONF=${CONF_SYSTEM}
else
    echo "Configuration file(s) not present, or readable!"
    exit
fi

INTF=`cat "${CONF}" | grep intf | cut -d"=" -f2`
WPA_SUPPLICANT_CONF=`cat "${CONF}" | grep wpa_supplicant_conf | cut -d"=" -f2`

if [ -n "$1" ]
then
    INTF=$1
elif [ -z "${INTF}" ]
then
    echo -n "Choose an wireless interface to associate to a network: "
    INTF_LST=`ifconfig | egrep "^[a-zA-Z0-9]*:" | sed -e "s/:.*$//"`
    echo "${INTF_LST}"
    echo -n "[eg. lo0]: "
    read INTF
    INTF=`echo "${INTF_LST}" | awk -v intf="${INTF}" '{if($1 == intf) print $1}'`
    if [ -z ${INTF} ]
    then
        echo "No applicable interface selected!"
        exit
    fi
fi

NWID_FOUND=`ifconfig ${INTF} scan | egrep -o "nwid .*" | awk '{ gsub(" chan.*", ""); gsub("nwid ", ""); print $0}' | sort | uniq`
NWID_APPROVED=`cat ${CONF} | grep nwid | sed -e "s/^[ $(printf '\t')]*nwid=//" | sort`
NWID_AVAIL=""
for nwa in $NWID_APPROVED
do
    for nwf in $NWID_FOUND
    do
        if [ $nwa = $nwf ]
        then
            NWID_AVAIL="$NWID_AVAIL$nwf\n"
        fi
    done
done
NWID_AVAIL=`echo $NWID_AVAIL | sed "s/\n$//g"`

NWID_AVAIL=`echo "$NWID_AVAIL" | awk '{print NR":", $0}'`

if [ -z "${NWID_AVAIL}" ]
then
    echo "No approved availble nwid(s) found"
    exit
fi

echo "Networks approved that are within range:"
echo "${NWID_AVAIL}"
echo -n "Please make numerical selection [eg. 1]: "
read CHOICE

NWID=`echo "${NWID_AVAIL}" | egrep "^${CHOICE}:" | sed -e 's/^[0-9]*: //'`

# Acquires the parameter in the configuration file specificed in CONF
# The configuration file expects the following format:
#
# network {
#   nwid=myssid
#   wpakey=myhashedkey
#   options=extra options to pass to ifconfig
#   # enterprise activates wpa_supplicant using the provided interface, and
#   # configuration file specificed in INTF, and WPA_SUPPLICANT respectively.
#   enterprise=false
# }
get_param()
{
    NWID=$1
    PARAM=$2
    echo "`cat ${CONF} | sed -e "/${NWID}/,/}/!d" | sed -e "s/^[ \t]*//" | grep [^}] | awk -F"=" -v param="${PARAM}" '{if ($1 == param) print $2}'`"
}

# NWID parameters from configuration file
NWID="`get_param ${NWID} nwid`"
WPAKEY="`get_param ${NWID} wpakey`"
OPTIONS="`get_param ${NWID} options`"
ENTERPRISE="`get_param ${NWID} enterprise`"

if [ -n "${NWID}" ]
then
    if [ -n "${WPAKEY}" ]
    then
        WPAKEY="wpakey ${WPAKEY}"
    fi
    ifconfig ${INTF} nwid ${NWID} wpa ${WPAKEY} ${OPTIONS} up
fi

if [ "${ENTERPRISE}" == "true" ]
then
    # Allow a few seconds for ifconfig to connect to AP
    WPA_SUPPLICANT_CTRL_IFACE="/var/run/wpa_supplicant/${INTF}"
    if [ -e "${WPA_SUPPLICANT_CTRL_IFACE}" ]
    then
        rm "${WPA_SUPPLICANT_CTRL_IFACE}"
    fi
    sleep 3
    wpa_supplicant -i ${INTF} -c ${WPA_SUPPLICANT_CONF} &
fi

